<html>
<head>
    <link rel="stylesheet" type="text/css" href="~/Content/Site.css" />
    <meta http-equiv="Content-Type" content="text/html; charset=utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=0">
    <meta name="apple-mobile-web-app-capable" content="yes">
    <script src="~/Scripts/OpenLayers-2.13.1/OpenLayers.js"></script>
    <script src="~/Scripts/jquery-1.11.3.min.js"></script>
    <script type="text/javascript">
        var map, layer, default_points, segments, vector_layer;
        //TODO list:
        //Add a layer switcher with three collections programmed in //Could I get away with just a radial menu?
        //Add a form/control for near
        //Add a control for within polygon
        //Add a control for within box
        //Add a line intersection tool

        function getLayer(layerId, localLayer) {
            $.get("/home/layer/" + layerId, function (data) {
                console.log(data);
                var features = [];
                //parse data as list of objects
                var parsedData = JSON.parse(data);
                //for each object
                for (var i = 0; i < parsedData.length; i++) {
                    var coords = parsedData[i].geo.coordinates;
                    var lonLat = new OpenLayers.LonLat(-117.6, 34.07).transform(
                        new OpenLayers.Projection("EPSG:4326"),
                        map.getProjectionObject()
                    );
                    var geometry = new OpenLayers.Geometry.Point(lonLat.lon, lonLat.lat);
                    var feature = new OpenLayers.Feature.Vector(geometry, parseData.attributes);
                    features.push(feature);
                }

                localLayer.addFeatures(features);
            });
        }

        function activateLayer(layerId) {
            if (layerId === 'default_points') {
                //ensure segments is invisible
                //clear out the old features from the layer
                //set the visibility of the layer as on
                getLayer(layerId, default_points);
            }

            if (layerId === 'segment') {
                //ensure default points is invisible
                //clear out the old features from the layer
                //set the visibility of the layer as on
                getLayer(layerId, default_points);
            }

            else {//none case.
                //ensure the other two layers are invisible
                //dump their features?
            }
        }
        //TODO: bind this function to radial buttons

        function polygonComplete(feature) {
            //query for the id selected
            //extract geometry
            //form the query for within polygon
            //call /home/WithinPolygon/id (POST)
        }

        function boxComplete(feature/*box?*/) {
            //query for the id selected
            //extract geometry
            //form the query for within polygon
            //call /home/WithinBox/id (POST)
        }

        function lineComplete(feature/*box?*/) {
            //query for the id selected
            //extract geometry
            //form the query for within polygon
            //call /home/WithinBox/id (POST)
        }

        function near(point) {
            //set up the call to near.
            //should I set up the document here?
        }

        function init() {
            map = new OpenLayers.Map('map');
            layer = new OpenLayers.Layer.OSM("Simple OSM Map");
            map.addLayer(layer);
            map.setCenter(
                new OpenLayers.LonLat(-117.6, 34.07).transform(
                    new OpenLayers.Projection("EPSG:4326"),
                    map.getProjectionObject()
                ), 12
            );
        }
    </script>
</head>
<body onload="init()">
    <div id="map" class="smallmap"></div>
</body>
</html>